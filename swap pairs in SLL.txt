/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode* swapPairs(struct ListNode* head){
          if(head==NULL){
              return NULL;
          }
          else if(head->next==NULL){
              return head;
          }
          else if(head->next->next==NULL){
              struct ListNode* temp = head;
              temp=temp->next;
              temp->next = head;
              head->next=NULL;
              return temp;
          }
         else{
           struct ListNode* first=head;
           struct ListNode* second = head;
           struct ListNode* temp = head;
           second = first->next;
           temp = second->next;
           second->next=first;
           first->next=temp;
           head = second;
           struct ListNode* flag=first;
           if(temp->next==NULL){
               return head;
           }
           while(temp->next->next!=NULL){
               first=temp;
               second = first->next;
               temp = second->next;
               flag->next = second;
               second->next=first;
               first->next=temp;
               flag=first;
               if(temp->next==NULL){
                   return head;
               }
           }
           struct ListNode* prime = temp->next;
           flag->next = prime;
           prime->next = temp;
           temp->next=NULL;
           return head;
         }
}